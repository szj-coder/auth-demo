// Generated from java-escape by ANTLR 4.11.1
package com.example.authdemo.antlr.gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class AntlrDemoLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, PLUS=4, MINUS=5, MULT=6, DIV=7, LPAREN=8, RPAREN=9, 
		OPENCURLY=10, CLOSECURLY=11, INTEGER=12, DOUBLE=13, BOOLEAN=14, IF=15, 
		ELSE=16, A=17, B=18, C=19, D=20, E=21, F=22, G=23, H=24, I=25, J=26, K=27, 
		L=28, M=29, N=30, O=31, P=32, Q=33, R=34, S=35, T=36, U=37, V=38, W=39, 
		X=40, Y=41, Z=42, WS=43;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "PLUS", "MINUS", "MULT", "DIV", "LPAREN", "RPAREN", 
			"OPENCURLY", "CLOSECURLY", "INTEGER", "DOUBLE", "BOOLEAN", "IF", "ELSE", 
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'=='", "'?'", "':'", "'+'", "'-'", "'*'", "'/'", "'('", "')'", 
			"'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, "PLUS", "MINUS", "MULT", "DIV", "LPAREN", "RPAREN", 
			"OPENCURLY", "CLOSECURLY", "INTEGER", "DOUBLE", "BOOLEAN", "IF", "ELSE", 
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AntlrDemoLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AntlrDemo.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000+\u00d4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0003\u000bp\b\u000b\u0001\u000b"+
		"\u0004\u000bs\b\u000b\u000b\u000b\f\u000bt\u0001\f\u0003\fx\b\f\u0001"+
		"\f\u0004\f{\b\f\u000b\f\f\f|\u0001\f\u0001\f\u0004\f\u0081\b\f\u000b\f"+
		"\f\f\u0082\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\r\u0003\r\u0090\b\r\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001"+
		"\u001f\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#"+
		"\u0001#\u0001$\u0001$\u0001%\u0001%\u0001&\u0001&\u0001\'\u0001\'\u0001"+
		"(\u0001(\u0001)\u0001)\u0001*\u0004*\u00cf\b*\u000b*\f*\u00d0\u0001*\u0001"+
		"*\u0000\u0000+\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u001f"+
		"? A!C\"E#G$I%K&M\'O(Q)S*U+\u0001\u0000\u001d\u0001\u0000--\u0001\u0000"+
		"09\u0002\u0000AAaa\u0002\u0000BBbb\u0002\u0000CCcc\u0002\u0000DDdd\u0002"+
		"\u0000EEee\u0002\u0000FFff\u0002\u0000GGgg\u0002\u0000HHhh\u0002\u0000"+
		"IIii\u0002\u0000JJjj\u0002\u0000KKkk\u0002\u0000LLll\u0002\u0000MMmm\u0002"+
		"\u0000NNnn\u0002\u0000OOoo\u0002\u0000PPpp\u0002\u0000QQqq\u0002\u0000"+
		"RRrr\u0002\u0000SSss\u0002\u0000TTtt\u0002\u0000UUuu\u0002\u0000VVvv\u0002"+
		"\u0000WWww\u0002\u0000XXxx\u0002\u0000YYyy\u0002\u0000ZZzz\u0003\u0000"+
		"\t\n\r\r  \u00da\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0001W\u0001\u0000\u0000"+
		"\u0000\u0003Z\u0001\u0000\u0000\u0000\u0005\\\u0001\u0000\u0000\u0000"+
		"\u0007^\u0001\u0000\u0000\u0000\t`\u0001\u0000\u0000\u0000\u000bb\u0001"+
		"\u0000\u0000\u0000\rd\u0001\u0000\u0000\u0000\u000ff\u0001\u0000\u0000"+
		"\u0000\u0011h\u0001\u0000\u0000\u0000\u0013j\u0001\u0000\u0000\u0000\u0015"+
		"l\u0001\u0000\u0000\u0000\u0017o\u0001\u0000\u0000\u0000\u0019w\u0001"+
		"\u0000\u0000\u0000\u001b\u008f\u0001\u0000\u0000\u0000\u001d\u0091\u0001"+
		"\u0000\u0000\u0000\u001f\u0094\u0001\u0000\u0000\u0000!\u0099\u0001\u0000"+
		"\u0000\u0000#\u009b\u0001\u0000\u0000\u0000%\u009d\u0001\u0000\u0000\u0000"+
		"\'\u009f\u0001\u0000\u0000\u0000)\u00a1\u0001\u0000\u0000\u0000+\u00a3"+
		"\u0001\u0000\u0000\u0000-\u00a5\u0001\u0000\u0000\u0000/\u00a7\u0001\u0000"+
		"\u0000\u00001\u00a9\u0001\u0000\u0000\u00003\u00ab\u0001\u0000\u0000\u0000"+
		"5\u00ad\u0001\u0000\u0000\u00007\u00af\u0001\u0000\u0000\u00009\u00b1"+
		"\u0001\u0000\u0000\u0000;\u00b3\u0001\u0000\u0000\u0000=\u00b5\u0001\u0000"+
		"\u0000\u0000?\u00b7\u0001\u0000\u0000\u0000A\u00b9\u0001\u0000\u0000\u0000"+
		"C\u00bb\u0001\u0000\u0000\u0000E\u00bd\u0001\u0000\u0000\u0000G\u00bf"+
		"\u0001\u0000\u0000\u0000I\u00c1\u0001\u0000\u0000\u0000K\u00c3\u0001\u0000"+
		"\u0000\u0000M\u00c5\u0001\u0000\u0000\u0000O\u00c7\u0001\u0000\u0000\u0000"+
		"Q\u00c9\u0001\u0000\u0000\u0000S\u00cb\u0001\u0000\u0000\u0000U\u00ce"+
		"\u0001\u0000\u0000\u0000WX\u0005=\u0000\u0000XY\u0005=\u0000\u0000Y\u0002"+
		"\u0001\u0000\u0000\u0000Z[\u0005?\u0000\u0000[\u0004\u0001\u0000\u0000"+
		"\u0000\\]\u0005:\u0000\u0000]\u0006\u0001\u0000\u0000\u0000^_\u0005+\u0000"+
		"\u0000_\b\u0001\u0000\u0000\u0000`a\u0005-\u0000\u0000a\n\u0001\u0000"+
		"\u0000\u0000bc\u0005*\u0000\u0000c\f\u0001\u0000\u0000\u0000de\u0005/"+
		"\u0000\u0000e\u000e\u0001\u0000\u0000\u0000fg\u0005(\u0000\u0000g\u0010"+
		"\u0001\u0000\u0000\u0000hi\u0005)\u0000\u0000i\u0012\u0001\u0000\u0000"+
		"\u0000jk\u0005{\u0000\u0000k\u0014\u0001\u0000\u0000\u0000lm\u0005}\u0000"+
		"\u0000m\u0016\u0001\u0000\u0000\u0000np\u0007\u0000\u0000\u0000on\u0001"+
		"\u0000\u0000\u0000op\u0001\u0000\u0000\u0000pr\u0001\u0000\u0000\u0000"+
		"qs\u0007\u0001\u0000\u0000rq\u0001\u0000\u0000\u0000st\u0001\u0000\u0000"+
		"\u0000tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000u\u0018\u0001"+
		"\u0000\u0000\u0000vx\u0007\u0000\u0000\u0000wv\u0001\u0000\u0000\u0000"+
		"wx\u0001\u0000\u0000\u0000xz\u0001\u0000\u0000\u0000y{\u0007\u0001\u0000"+
		"\u0000zy\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|z\u0001\u0000"+
		"\u0000\u0000|}\u0001\u0000\u0000\u0000}~\u0001\u0000\u0000\u0000~\u0080"+
		"\u0005.\u0000\u0000\u007f\u0081\u0007\u0001\u0000\u0000\u0080\u007f\u0001"+
		"\u0000\u0000\u0000\u0081\u0082\u0001\u0000\u0000\u0000\u0082\u0080\u0001"+
		"\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0083\u001a\u0001"+
		"\u0000\u0000\u0000\u0084\u0085\u0003G#\u0000\u0085\u0086\u0003C!\u0000"+
		"\u0086\u0087\u0003I$\u0000\u0087\u0088\u0003)\u0014\u0000\u0088\u0090"+
		"\u0001\u0000\u0000\u0000\u0089\u008a\u0003+\u0015\u0000\u008a\u008b\u0003"+
		"!\u0010\u0000\u008b\u008c\u00037\u001b\u0000\u008c\u008d\u0003E\"\u0000"+
		"\u008d\u008e\u0003)\u0014\u0000\u008e\u0090\u0001\u0000\u0000\u0000\u008f"+
		"\u0084\u0001\u0000\u0000\u0000\u008f\u0089\u0001\u0000\u0000\u0000\u0090"+
		"\u001c\u0001\u0000\u0000\u0000\u0091\u0092\u00031\u0018\u0000\u0092\u0093"+
		"\u0003+\u0015\u0000\u0093\u001e\u0001\u0000\u0000\u0000\u0094\u0095\u0003"+
		")\u0014\u0000\u0095\u0096\u00037\u001b\u0000\u0096\u0097\u0003E\"\u0000"+
		"\u0097\u0098\u0003)\u0014\u0000\u0098 \u0001\u0000\u0000\u0000\u0099\u009a"+
		"\u0007\u0002\u0000\u0000\u009a\"\u0001\u0000\u0000\u0000\u009b\u009c\u0007"+
		"\u0003\u0000\u0000\u009c$\u0001\u0000\u0000\u0000\u009d\u009e\u0007\u0004"+
		"\u0000\u0000\u009e&\u0001\u0000\u0000\u0000\u009f\u00a0\u0007\u0005\u0000"+
		"\u0000\u00a0(\u0001\u0000\u0000\u0000\u00a1\u00a2\u0007\u0006\u0000\u0000"+
		"\u00a2*\u0001\u0000\u0000\u0000\u00a3\u00a4\u0007\u0007\u0000\u0000\u00a4"+
		",\u0001\u0000\u0000\u0000\u00a5\u00a6\u0007\b\u0000\u0000\u00a6.\u0001"+
		"\u0000\u0000\u0000\u00a7\u00a8\u0007\t\u0000\u0000\u00a80\u0001\u0000"+
		"\u0000\u0000\u00a9\u00aa\u0007\n\u0000\u0000\u00aa2\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ac\u0007\u000b\u0000\u0000\u00ac4\u0001\u0000\u0000\u0000"+
		"\u00ad\u00ae\u0007\f\u0000\u0000\u00ae6\u0001\u0000\u0000\u0000\u00af"+
		"\u00b0\u0007\r\u0000\u0000\u00b08\u0001\u0000\u0000\u0000\u00b1\u00b2"+
		"\u0007\u000e\u0000\u0000\u00b2:\u0001\u0000\u0000\u0000\u00b3\u00b4\u0007"+
		"\u000f\u0000\u0000\u00b4<\u0001\u0000\u0000\u0000\u00b5\u00b6\u0007\u0010"+
		"\u0000\u0000\u00b6>\u0001\u0000\u0000\u0000\u00b7\u00b8\u0007\u0011\u0000"+
		"\u0000\u00b8@\u0001\u0000\u0000\u0000\u00b9\u00ba\u0007\u0012\u0000\u0000"+
		"\u00baB\u0001\u0000\u0000\u0000\u00bb\u00bc\u0007\u0013\u0000\u0000\u00bc"+
		"D\u0001\u0000\u0000\u0000\u00bd\u00be\u0007\u0014\u0000\u0000\u00beF\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c0\u0007\u0015\u0000\u0000\u00c0H\u0001\u0000"+
		"\u0000\u0000\u00c1\u00c2\u0007\u0016\u0000\u0000\u00c2J\u0001\u0000\u0000"+
		"\u0000\u00c3\u00c4\u0007\u0017\u0000\u0000\u00c4L\u0001\u0000\u0000\u0000"+
		"\u00c5\u00c6\u0007\u0018\u0000\u0000\u00c6N\u0001\u0000\u0000\u0000\u00c7"+
		"\u00c8\u0007\u0019\u0000\u0000\u00c8P\u0001\u0000\u0000\u0000\u00c9\u00ca"+
		"\u0007\u001a\u0000\u0000\u00caR\u0001\u0000\u0000\u0000\u00cb\u00cc\u0007"+
		"\u001b\u0000\u0000\u00ccT\u0001\u0000\u0000\u0000\u00cd\u00cf\u0007\u001c"+
		"\u0000\u0000\u00ce\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d0\u0001\u0000"+
		"\u0000\u0000\u00d0\u00ce\u0001\u0000\u0000\u0000\u00d0\u00d1\u0001\u0000"+
		"\u0000\u0000\u00d1\u00d2\u0001\u0000\u0000\u0000\u00d2\u00d3\u0006*\u0000"+
		"\u0000\u00d3V\u0001\u0000\u0000\u0000\b\u0000otw|\u0082\u008f\u00d0\u0001"+
		"\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}